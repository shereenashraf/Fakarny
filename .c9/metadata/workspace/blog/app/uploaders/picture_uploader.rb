{"filter":false,"title":"picture_uploader.rb","tooltip":"/blog/app/uploaders/picture_uploader.rb","undoManager":{"mark":26,"position":26,"stack":[[{"group":"doc","deltas":[{"start":{"row":50,"column":0},"end":{"row":51,"column":0},"action":"insert","lines":["",""]}]}],[{"group":"doc","deltas":[{"start":{"row":50,"column":0},"end":{"row":52,"column":5},"action":"insert","lines":[" def extension_white_list","    %w(jpg jpeg gif png)","  end"]}]}],[{"group":"doc","deltas":[{"start":{"row":3,"column":0},"end":{"row":4,"column":37},"action":"insert","lines":["include CarrierWave::MiniMagick","  process resize_to_limit: [400, 400]"]}]}],[{"group":"doc","deltas":[{"start":{"row":4,"column":37},"end":{"row":5,"column":0},"action":"insert","lines":["",""]},{"start":{"row":5,"column":0},"end":{"row":5,"column":2},"action":"insert","lines":["  "]}]}],[{"group":"doc","deltas":[{"start":{"row":5,"column":2},"end":{"row":6,"column":0},"action":"insert","lines":["",""]},{"start":{"row":6,"column":0},"end":{"row":6,"column":2},"action":"insert","lines":["  "]}]}],[{"group":"doc","deltas":[{"start":{"row":6,"column":2},"end":{"row":10,"column":5},"action":"insert","lines":[" if Rails.env.production?","    storage :fog","  else","    storage :file","  end"]}]}],[{"group":"doc","deltas":[{"start":{"row":3,"column":0},"end":{"row":4,"column":0},"action":"insert","lines":["",""]}]}],[{"group":"doc","deltas":[{"start":{"row":3,"column":0},"end":{"row":4,"column":0},"action":"remove","lines":["",""]},{"start":{"row":4,"column":37},"end":{"row":10,"column":5},"action":"remove","lines":["","  ","   if Rails.env.production?","    storage :fog","  else","    storage :file","  end"]},{"start":{"row":3,"column":0},"end":{"row":4,"column":0},"action":"insert","lines":["",""]},{"start":{"row":6,"column":0},"end":{"row":12,"column":0},"action":"insert","lines":["  ","   if Rails.env.production?","    storage :fog","  else","    storage :file","  end",""]}]}],[{"group":"doc","deltas":[{"start":{"row":25,"column":0},"end":{"row":26,"column":0},"action":"insert","lines":["",""]}]}],[{"group":"doc","deltas":[{"start":{"row":26,"column":0},"end":{"row":35,"column":3},"action":"insert","lines":[" storage :file","","  def store_dir","    \"uploads/#{model.class.to_s.underscore}/#{mounted_as}/#{model.id}\"","  end","","  def extension_white_list","    %w(pdf doc htm html docx)","  end","end"]}]}],[{"group":"doc","deltas":[{"start":{"row":22,"column":0},"end":{"row":26,"column":14},"action":"remove","lines":["  def store_dir","    \"uploads/#{model.class.to_s.underscore}/#{mounted_as}/#{model.id}\"","  end",""," storage :file"]}]}],[{"group":"doc","deltas":[{"start":{"row":30,"column":4},"end":{"row":30,"column":5},"action":"remove","lines":["d"]}]}],[{"group":"doc","deltas":[{"start":{"row":30,"column":3},"end":{"row":30,"column":4},"action":"remove","lines":["n"]}]}],[{"group":"doc","deltas":[{"start":{"row":30,"column":2},"end":{"row":30,"column":3},"action":"remove","lines":["e"]}]}],[{"group":"doc","deltas":[{"start":{"row":30,"column":0},"end":{"row":30,"column":2},"action":"remove","lines":["  "]}]}],[{"group":"doc","deltas":[{"start":{"row":6,"column":0},"end":{"row":11,"column":5},"action":"remove","lines":["  ","   if Rails.env.production?","    storage :fog","  else","    storage :file","  end"]}]}],[{"group":"doc","deltas":[{"start":{"row":4,"column":0},"end":{"row":6,"column":0},"action":"remove","lines":["include CarrierWave::MiniMagick","  process resize_to_limit: [400, 400]",""]}]}],[{"group":"doc","deltas":[{"start":{"row":5,"column":0},"end":{"row":60,"column":3},"action":"remove","lines":["  # Include RMagick or MiniMagick support:","  # include CarrierWave::RMagick","  # include CarrierWave::MiniMagick","","  # Choose what kind of storage to use for this uploader:","  storage :file","  # storage :fog","","  # Override the directory where uploaded files will be stored.","  # This is a sensible default for uploaders that are meant to be mounted:","","","  def store_dir","    \"uploads/#{model.class.to_s.underscore}/#{mounted_as}/#{model.id}\"","  end","","  def extension_white_list","    %w(pdf doc htm html docx)","","end","  # Provide a default URL as a default if there hasn't been a file uploaded:","  # def default_url","  #   # For Rails 3.1+ asset pipeline compatibility:","  #   # ActionController::Base.helpers.asset_path(\"fallback/\" + [version_name, \"default.png\"].compact.join('_'))","  #","  #   \"/images/fallback/\" + [version_name, \"default.png\"].compact.join('_')","  # end","","  # Process files as they are uploaded:","  # process :scale => [200, 300]","  #","  # def scale(width, height)","  #   # do something","  # end","","  # Create different versions of your uploaded files:","  # version :thumb do","  #   process :resize_to_fit => [50, 50]","  # end","","  # Add a white list of extensions which are allowed to be uploaded.","  # For images you might use something like this:","  # def extension_white_list","  #   %w(jpg jpeg gif png)","  # end","","  # Override the filename of the uploaded files:","  # Avoid using model.id or version_name here, see uploader/store.rb for details.","  # def filename","  #   \"something.jpg\" if original_filename","  # end",""," def extension_white_list","    %w(jpg jpeg gif png)","  end","end"]},{"start":{"row":5,"column":0},"end":{"row":14,"column":3},"action":"insert","lines":["  storage :file","","  def store_dir","    \"uploads/#{model.class.to_s.underscore}/#{mounted_as}/#{model.id}\"","  end","","  def extension_white_list","    %w(pdf doc htm html docx)","  end","end"]}]}],[{"group":"doc","deltas":[{"start":{"row":12,"column":28},"end":{"row":12,"column":29},"action":"insert","lines":[" "]}]}],[{"group":"doc","deltas":[{"start":{"row":12,"column":29},"end":{"row":12,"column":30},"action":"insert","lines":["j"]}]}],[{"group":"doc","deltas":[{"start":{"row":12,"column":30},"end":{"row":12,"column":31},"action":"insert","lines":["p"]}]}],[{"group":"doc","deltas":[{"start":{"row":12,"column":31},"end":{"row":12,"column":32},"action":"insert","lines":["g"]}]}],[{"group":"doc","deltas":[{"start":{"row":12,"column":7},"end":{"row":12,"column":29},"action":"remove","lines":["pdf doc htm html docx "]}]}],[{"group":"doc","deltas":[{"start":{"row":12,"column":7},"end":{"row":12,"column":8},"action":"insert","lines":["p"]}]}],[{"group":"doc","deltas":[{"start":{"row":12,"column":8},"end":{"row":12,"column":9},"action":"insert","lines":["n"]}]}],[{"group":"doc","deltas":[{"start":{"row":12,"column":9},"end":{"row":12,"column":10},"action":"insert","lines":["g"]}]}],[{"group":"doc","deltas":[{"start":{"row":12,"column":10},"end":{"row":12,"column":11},"action":"insert","lines":[" "]}]}],[{"group":"doc","deltas":[{"start":{"row":13,"column":5},"end":{"row":14,"column":0},"action":"insert","lines":["",""]},{"start":{"row":14,"column":0},"end":{"row":14,"column":2},"action":"insert","lines":["  "]}]}],[{"group":"doc","deltas":[{"start":{"row":14,"column":2},"end":{"row":21,"column":0},"action":"insert","lines":[" version :resized do","    # returns an image with a maximum width of 100px ","    # while maintaining the aspect ratio","    # 10000 is used to tell CW that the height is free ","    # and so that it will hit the 100 px width first","    process :resize_to_fit => [100, 10000]","  end",""]}]}],[{"group":"doc","deltas":[{"start":{"row":19,"column":40},"end":{"row":19,"column":41},"action":"remove","lines":["0"]}]}],[{"group":"doc","deltas":[{"start":{"row":19,"column":39},"end":{"row":19,"column":40},"action":"remove","lines":["0"]}]}],[{"group":"doc","deltas":[{"start":{"row":19,"column":38},"end":{"row":19,"column":39},"action":"remove","lines":["0"]}]}],[{"group":"doc","deltas":[{"start":{"row":19,"column":38},"end":{"row":19,"column":39},"action":"insert","lines":["0"]}]}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":13,"column":5},"end":{"row":13,"column":5},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1428454157769,"hash":"2e91d97a94693200f878abb3fc4c97c4a82c7c8b"}